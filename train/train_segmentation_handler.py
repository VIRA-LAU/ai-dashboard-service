from ultralytics import YOLO
from ultralytics.data.annotator import auto_annotate

# Check the lnk below for more info on the YOLOv8 Instance Segmentation training arguments
# https://docs.ultralytics.com/modes/train/#arguments

def train_segmentation(weights: str = 'yolo',
                       data: str = 'coco128-seg.yaml',
                       epochs: int = 100, 
                       patience: int = 50,
                       imgsz: int = 640, 
                       batch=8, 
                       save=True,
                       save_period=-1,
                       cache=False,
                       device=0, 
                       workers=8, 
                       project='runs/segmentation/train',
                       name='Segmentation_8_10_2023', 
                       exist_ok=False,
                       pretrained=False,
                       optimizer='auto',
                       verbose=True,
                       seed=0,
                       deterministic=True,
                       single_cls=False,
                       rect=False,
                       cos_lr=False,
                       close_mosaic=10,
                       resume=False,
                       amp=True,
                       fraction=1.0,
                       profile=False,
                       freeze=False,
                       lr0=0.01,
                       lrf=0.01,
                       momentum=0.937,
                       weight_decay=0.0005,
                       warmup_epochs=3.0,
                       warmup_momentum=0.8,
                       warmup_bias_lr=0.1,
                       box=7.5,
                       cls=0.5,
                       dfl=1.5,
                       pose=12.0,
                       kobj=2.0,
                       label_smoothing=0.0,
                       nbs=64,
                       overlap_mask=True,
                       mask_ratio=4,
                       dropout=0.0,
                       val=True):
    
    model = YOLO(weights)
    results = model.train(data=data, 
                          epochs=epochs, 
                          patience=patience,
                          imgsz=imgsz, 
                          batch=batch, 
                          save=save,
                          save_period=save_period,
                          cache=cache,
                          device=device, 
                          workers=workers, 
                          project=project,
                          name=name, 
                          exist_ok=exist_ok,
                          pretrained=pretrained,
                          optimizer=optimizer,
                          verbose=verbose,
                          seed=seed,
                          deterministic=deterministic,
                          single_cls=single_cls,
                          rect=rect,
                          cos_lr=cos_lr,
                          close_mosaic=close_mosaic,
                          resume=resume,
                          amp=amp,
                          fraction=fraction,
                          profile=profile,
                          freeze=freeze,
                          lr0=lr0,
                          lrf=lrf,
                          momentum=momentum,
                          weight_decay=weight_decay,
                          warmup_epochs=warmup_epochs,
                          warmup_momentum=warmup_momentum,
                          warmup_bias_lr=warmup_bias_lr,
                          box=box,
                          cls=cls,
                          dfl=dfl,
                          pose=pose,
                          kobj=kobj,
                          label_smoothing=label_smoothing,
                          nbs=nbs,
                          overlap_mask=overlap_mask,
                          mask_ratio=mask_ratio,
                          dropout=dropout,
                          val=val)
    
    return

def auto_annotate_segmentation():
    auto_annotate(data="datasets/training_datasets/instance_segmentation/29_9_2023_PhoneDatasetThree_7", det_model="yolov8n-seg.pt", device=0)
    return